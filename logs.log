2024-09-22 15:48:33,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:48:33,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:48:33,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:48:33,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:50:58,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:50:58,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:50:58,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:50:58,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:51:30,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:51:30,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:51:30,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:51:30,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:52:42,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:52:42,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:52:42,393:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:52:42,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:53:30,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:53:30,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:53:30,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:53:30,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 15:53:45,822:INFO:Initializing predict_model()
2024-09-22 15:53:45,822:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E03635B2E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E036332050>)
2024-09-22 15:53:45,822:INFO:Checking exceptions
2024-09-22 15:53:45,822:INFO:Preloading libraries
2024-09-22 15:53:45,828:INFO:Set up data.
2024-09-22 15:53:45,848:INFO:Set up index.
2024-09-22 15:54:12,188:INFO:Initializing predict_model()
2024-09-22 15:54:12,188:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B4CA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E036385FC0>)
2024-09-22 15:54:12,188:INFO:Checking exceptions
2024-09-22 15:54:12,188:INFO:Preloading libraries
2024-09-22 15:54:12,189:INFO:Set up data.
2024-09-22 15:54:12,196:INFO:Set up index.
2024-09-22 15:54:30,900:INFO:Initializing predict_model()
2024-09-22 15:54:30,900:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B68F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E0363865F0>)
2024-09-22 15:54:30,901:INFO:Checking exceptions
2024-09-22 15:54:30,901:INFO:Preloading libraries
2024-09-22 15:54:30,901:INFO:Set up data.
2024-09-22 15:54:30,909:INFO:Set up index.
2024-09-22 15:55:07,087:INFO:Initializing predict_model()
2024-09-22 15:55:07,087:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B5720>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E036385FC0>)
2024-09-22 15:55:07,087:INFO:Checking exceptions
2024-09-22 15:55:07,087:INFO:Preloading libraries
2024-09-22 15:55:07,088:INFO:Set up data.
2024-09-22 15:55:07,096:INFO:Set up index.
2024-09-22 15:55:46,379:INFO:Initializing predict_model()
2024-09-22 15:55:46,379:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B6E60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E036386680>)
2024-09-22 15:55:46,379:INFO:Checking exceptions
2024-09-22 15:55:46,379:INFO:Preloading libraries
2024-09-22 15:55:46,380:INFO:Set up data.
2024-09-22 15:55:46,386:INFO:Set up index.
2024-09-22 15:56:08,663:INFO:Initializing predict_model()
2024-09-22 15:56:08,664:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B6710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E0363865F0>)
2024-09-22 15:56:08,664:INFO:Checking exceptions
2024-09-22 15:56:08,664:INFO:Preloading libraries
2024-09-22 15:56:08,664:INFO:Set up data.
2024-09-22 15:56:08,670:INFO:Set up index.
2024-09-22 15:57:11,765:INFO:Initializing predict_model()
2024-09-22 15:57:11,765:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B4850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E036385FC0>)
2024-09-22 15:57:11,765:INFO:Checking exceptions
2024-09-22 15:57:11,766:INFO:Preloading libraries
2024-09-22 15:57:11,766:INFO:Set up data.
2024-09-22 15:57:11,773:INFO:Set up index.
2024-09-22 16:13:48,930:INFO:Initializing predict_model()
2024-09-22 16:13:48,930:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B4AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E036386680>)
2024-09-22 16:13:48,930:INFO:Checking exceptions
2024-09-22 16:13:48,930:INFO:Preloading libraries
2024-09-22 16:13:48,931:INFO:Set up data.
2024-09-22 16:13:48,939:INFO:Set up index.
2024-09-22 16:14:01,441:INFO:Initializing predict_model()
2024-09-22 16:14:01,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0363B60E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E0363865F0>)
2024-09-22 16:14:01,441:INFO:Checking exceptions
2024-09-22 16:14:01,441:INFO:Preloading libraries
2024-09-22 16:14:01,442:INFO:Set up data.
2024-09-22 16:14:01,449:INFO:Set up index.
2024-09-22 16:14:46,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:14:46,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:14:46,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:14:46,016:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:14:51,251:INFO:Initializing predict_model()
2024-09-22 16:14:51,251:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000241C662B2E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000241C6602050>)
2024-09-22 16:14:51,251:INFO:Checking exceptions
2024-09-22 16:14:51,251:INFO:Preloading libraries
2024-09-22 16:14:51,252:INFO:Set up data.
2024-09-22 16:14:51,260:INFO:Set up index.
2024-09-22 16:15:12,667:INFO:Initializing predict_model()
2024-09-22 16:15:12,667:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000241C6684CA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000241C6655FC0>)
2024-09-22 16:15:12,668:INFO:Checking exceptions
2024-09-22 16:15:12,668:INFO:Preloading libraries
2024-09-22 16:15:12,668:INFO:Set up data.
2024-09-22 16:15:12,675:INFO:Set up index.
2024-09-22 16:15:34,823:INFO:Initializing predict_model()
2024-09-22 16:15:34,824:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000241C6686980>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000241C66565F0>)
2024-09-22 16:15:34,824:INFO:Checking exceptions
2024-09-22 16:15:34,824:INFO:Preloading libraries
2024-09-22 16:15:34,825:INFO:Set up data.
2024-09-22 16:15:34,829:INFO:Set up index.
2024-09-22 16:31:03,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:31:03,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:31:03,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:31:03,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:35:45,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:35:45,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:35:45,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:35:45,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:38:43,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:38:43,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:38:43,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:38:43,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:39:49,245:INFO:Initializing predict_model()
2024-09-22 16:39:49,245:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001499FA285B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001499FA52D40>)
2024-09-22 16:39:49,245:INFO:Checking exceptions
2024-09-22 16:39:49,245:INFO:Preloading libraries
2024-09-22 16:39:49,250:INFO:Set up data.
2024-09-22 16:39:49,271:INFO:Set up index.
2024-09-22 16:49:48,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:49:48,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:49:48,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:49:48,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 16:52:04,420:INFO:Initializing predict_model()
2024-09-22 16:52:04,421:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021AB4E4CDC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021AB4E729E0>)
2024-09-22 16:52:04,421:INFO:Checking exceptions
2024-09-22 16:52:04,421:INFO:Preloading libraries
2024-09-22 16:52:04,423:INFO:Set up data.
2024-09-22 16:52:04,428:INFO:Set up index.
2024-09-22 16:53:23,580:INFO:Initializing predict_model()
2024-09-22 16:53:23,581:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021AB4E90190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021AB4FB4310>)
2024-09-22 16:53:23,581:INFO:Checking exceptions
2024-09-22 16:53:23,581:INFO:Preloading libraries
2024-09-22 16:53:23,582:INFO:Set up data.
2024-09-22 16:53:23,599:INFO:Set up index.
2024-09-22 16:54:12,386:INFO:Initializing predict_model()
2024-09-22 16:54:12,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021AB4E90F70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021AB4FB4430>)
2024-09-22 16:54:12,388:INFO:Checking exceptions
2024-09-22 16:54:12,388:INFO:Preloading libraries
2024-09-22 16:54:12,388:INFO:Set up data.
2024-09-22 16:54:12,398:INFO:Set up index.
2024-09-22 16:54:27,448:INFO:Initializing predict_model()
2024-09-22 16:54:27,448:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021AB4E93A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021AB4FB40D0>)
2024-09-22 16:54:27,448:INFO:Checking exceptions
2024-09-22 16:54:27,448:INFO:Preloading libraries
2024-09-22 16:54:27,449:INFO:Set up data.
2024-09-22 16:54:27,458:INFO:Set up index.
2024-09-22 16:54:56,364:INFO:Initializing predict_model()
2024-09-22 16:54:56,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021AB4E93580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021AB4FB41F0>)
2024-09-22 16:54:56,364:INFO:Checking exceptions
2024-09-22 16:54:56,364:INFO:Preloading libraries
2024-09-22 16:54:56,364:INFO:Set up data.
2024-09-22 16:54:56,372:INFO:Set up index.
2024-09-22 17:00:13,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:00:13,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:00:13,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:00:13,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:01:41,301:INFO:Initializing predict_model()
2024-09-22 17:01:41,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000147AE718D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000147AE7429E0>)
2024-09-22 17:01:41,302:INFO:Checking exceptions
2024-09-22 17:01:41,302:INFO:Preloading libraries
2024-09-22 17:01:41,302:INFO:Set up data.
2024-09-22 17:01:41,309:INFO:Set up index.
2024-09-22 17:02:20,603:INFO:Initializing predict_model()
2024-09-22 17:02:20,603:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000147AE7622C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000147AE9C65F0>)
2024-09-22 17:02:20,603:INFO:Checking exceptions
2024-09-22 17:02:20,604:INFO:Preloading libraries
2024-09-22 17:02:20,604:INFO:Set up data.
2024-09-22 17:02:20,613:INFO:Set up index.
2024-09-22 17:03:42,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:03:42,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:03:42,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:03:42,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 17:04:01,060:INFO:Initializing predict_model()
2024-09-22 17:04:01,060:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001AF847CA890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AF847F2A70>)
2024-09-22 17:04:01,060:INFO:Checking exceptions
2024-09-22 17:04:01,060:INFO:Preloading libraries
2024-09-22 17:04:01,060:INFO:Set up data.
2024-09-22 17:04:01,066:INFO:Set up index.
2024-09-22 18:09:10,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:10,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:10,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:10,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:44,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:44,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:44,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:44,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:09:44,974:WARNING:C:\Users\mayum\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.25.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.25.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.11', 'machine': 'AMD64'}}
  warnings.warn(

2024-09-22 18:10:12,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:10:12,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:10:12,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:10:12,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 18:10:13,171:WARNING:C:\Users\mayum\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.25.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.25.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.11', 'machine': 'AMD64'}}
  warnings.warn(

2024-09-22 18:10:56,001:INFO:Initializing predict_model()
2024-09-22 18:10:56,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF80363E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF7FF2EF0>)
2024-09-22 18:10:56,003:INFO:Checking exceptions
2024-09-22 18:10:56,003:INFO:Preloading libraries
2024-09-22 18:10:56,005:INFO:Set up data.
2024-09-22 18:10:56,023:INFO:Set up index.
2024-09-22 18:11:50,144:INFO:Initializing predict_model()
2024-09-22 18:11:50,144:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF80367A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF8052F80>)
2024-09-22 18:11:50,144:INFO:Checking exceptions
2024-09-22 18:11:50,144:INFO:Preloading libraries
2024-09-22 18:11:50,144:INFO:Set up data.
2024-09-22 18:11:50,159:INFO:Set up index.
2024-09-22 18:12:12,710:INFO:Initializing predict_model()
2024-09-22 18:12:12,711:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF8037160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF80535B0>)
2024-09-22 18:12:12,711:INFO:Checking exceptions
2024-09-22 18:12:12,711:INFO:Preloading libraries
2024-09-22 18:12:12,711:INFO:Set up data.
2024-09-22 18:12:12,724:INFO:Set up index.
2024-09-22 18:13:15,522:INFO:Initializing predict_model()
2024-09-22 18:13:15,522:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF8035B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF8052F80>)
2024-09-22 18:13:15,523:INFO:Checking exceptions
2024-09-22 18:13:15,523:INFO:Preloading libraries
2024-09-22 18:13:15,523:INFO:Set up data.
2024-09-22 18:13:15,531:INFO:Set up index.
2024-09-22 18:14:11,450:INFO:Initializing predict_model()
2024-09-22 18:14:11,450:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF80358A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF8053640>)
2024-09-22 18:14:11,450:INFO:Checking exceptions
2024-09-22 18:14:11,450:INFO:Preloading libraries
2024-09-22 18:14:11,451:INFO:Set up data.
2024-09-22 18:14:11,464:INFO:Set up index.
2024-09-22 18:14:35,723:INFO:Initializing predict_model()
2024-09-22 18:14:35,723:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF8037A30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF80535B0>)
2024-09-22 18:14:35,724:INFO:Checking exceptions
2024-09-22 18:14:35,724:INFO:Preloading libraries
2024-09-22 18:14:35,725:INFO:Set up data.
2024-09-22 18:14:35,738:INFO:Set up index.
2024-09-22 18:15:17,340:INFO:Initializing predict_model()
2024-09-22 18:15:17,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF8036980>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF8052F80>)
2024-09-22 18:15:17,341:INFO:Checking exceptions
2024-09-22 18:15:17,341:INFO:Preloading libraries
2024-09-22 18:15:17,342:INFO:Set up data.
2024-09-22 18:15:17,352:INFO:Set up index.
2024-09-22 18:15:29,984:INFO:Initializing predict_model()
2024-09-22 18:15:29,984:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF8037D60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF8053640>)
2024-09-22 18:15:29,984:INFO:Checking exceptions
2024-09-22 18:15:29,984:INFO:Preloading libraries
2024-09-22 18:15:29,994:INFO:Set up data.
2024-09-22 18:15:30,008:INFO:Set up index.
2024-09-22 18:15:41,794:INFO:Initializing predict_model()
2024-09-22 18:15:41,795:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BAF8036800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Avg. Session Length',
                                             'Time on App', 'Time on Website',
                                             'Length of Membership'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['dominio', 'Tec'],
                                    transformer=OneHotEncoder(cols=['dominio',
                                                                    'Tec'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BAF80535B0>)
2024-09-22 18:15:41,795:INFO:Checking exceptions
2024-09-22 18:15:41,795:INFO:Preloading libraries
2024-09-22 18:15:41,795:INFO:Set up data.
2024-09-22 18:15:41,808:INFO:Set up index.
2024-09-22 19:49:31,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 19:49:31,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 19:49:31,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 19:49:31,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-22 19:49:32,284:WARNING:C:\Users\mayum\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.0', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.25.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '72.1.0', 'pycaret': '3.3.2', 'IPython': '8.25.0', 'ipywidgets': '8.1.5', 'tqdm': '4.66.5', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.4', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.1', 'imblearn': '0.12.3', 'category_encoders': '2.6.3', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.11', 'machine': 'AMD64'}}
  warnings.warn(

